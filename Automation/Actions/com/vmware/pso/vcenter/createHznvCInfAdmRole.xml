<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="createHznvCInfAdmRole" result-type="void" api-version="6.0.0" id="9e29924e-e9b4-4a4d-b1c9-9b0851905434" version="0.0.2" allowed-operations="vfe" category-name="com.vmware.pso.vcenter">
  <description><![CDATA[Create custom role for Horizon vCenter Infra Admin in specified vCenter.]]></description>
  <param n="vCenterFQDN" t="string"><![CDATA[FQDN of the vCenter where vCenterVmName can be found.]]></param>
  <param n="vCenterUser" t="string"><![CDATA[]]></param>
  <param n="vCenterPassword" t="SecureString"><![CDATA[]]></param>
  <param n="roleName" t="string"><![CDATA[]]></param>
  <param n="ignoreSSLCertificate" t="boolean"/>
  <script encoded="false"><![CDATA["use strict"

var dbc = System.getModule("com.vmware.pso.util.testing").DesignByContract();

dbc.ensureNotNullOrEmpty(vCenterFQDN,"Input var: vCenterFQDN");
dbc.ensureNotNullOrEmpty(vCenterUser,"Input var: vCenterUser");
dbc.ensureNotNullOrEmpty(vCenterPassword,"Input var: vCenterPassword");
dbc.ensureNotNullOrEmpty(roleName,"Input var: roleName");

var role = {
  "name": roleName,
  "privileges": [
    "System.Anonymous",
    "System.View",
    "System.Read",
    "Global.VCServer",
    "Global.DisableMethods",
    "Global.EnableMethods",
    "Global.SystemTag",
    "Folder.Create",
    "Folder.Delete",
    "Datastore.Browse",
    "Datastore.FileManagement",
    "Datastore.AllocateSpace",
    "Network.Move",
    "Network.Delete",
    "Network.Config",
    "Network.Assign",
    "Host.Config.AdvancedConfig",
    "VirtualMachine.Inventory.Create",
    "VirtualMachine.Inventory.CreateFromExisting",
    "VirtualMachine.Inventory.Register",
    "VirtualMachine.Inventory.Delete",
    "VirtualMachine.Inventory.Unregister",
    "VirtualMachine.Inventory.Move",
    "VirtualMachine.Interact.PowerOn",
    "VirtualMachine.Interact.PowerOff",
    "VirtualMachine.Interact.Reset",
    "VirtualMachine.Interact.ConsoleInteract",
    "VirtualMachine.Config.Rename",
    "VirtualMachine.Config.Annotation",
    "VirtualMachine.Config.AddExistingDisk",
    "VirtualMachine.Config.AddNewDisk",
    "VirtualMachine.Config.RemoveDisk",
    "VirtualMachine.Config.RawDevice",
    "VirtualMachine.Config.HostUSBDevice",
    "VirtualMachine.Config.CPUCount",
    "VirtualMachine.Config.Memory",
    "VirtualMachine.Config.AddRemoveDevice",
    "VirtualMachine.Config.EditDevice",
    "VirtualMachine.Config.Settings",
    "VirtualMachine.Config.Resource",
    "VirtualMachine.Config.UpgradeVirtualHardware",
    "VirtualMachine.Config.ResetGuestInfo",
    "VirtualMachine.Config.ToggleForkParent",
    "VirtualMachine.Config.AdvancedConfig",
    "VirtualMachine.Config.DiskLease",
    "VirtualMachine.Config.SwapPlacement",
    "VirtualMachine.Config.DiskExtend",
    "VirtualMachine.Config.ChangeTracking",
    "VirtualMachine.Config.QueryUnownedFiles",
    "VirtualMachine.Config.ReloadFromPath",
    "VirtualMachine.Config.QueryFTCompatibility",
    "VirtualMachine.Config.MksControl",
    "VirtualMachine.Config.ManagedBy",
    "VirtualMachine.State.CreateSnapshot",
    "VirtualMachine.State.RevertToSnapshot",
    "VirtualMachine.State.RemoveSnapshot",
    "VirtualMachine.State.RenameSnapshot",
    "VirtualMachine.Provisioning.Customize",
    "VirtualMachine.Provisioning.Clone",
    "VirtualMachine.Provisioning.DeployTemplate",
    "VirtualMachine.Provisioning.ReadCustSpecs",
    "VirtualMachine.Provisioning.DiskRandomAccess",
    "Resource.AssignVMToPool",
    "VApp.Import"
  ]
};
var roleJSON = JSON.stringify(role);
var overwriteExisting = true;

var createResult = System.getModule("com.vmware.pso.vcenter.powercli.accesscontrol").createRole(vCenterFQDN,vCenterUser,vCenterPassword,roleJSON,overwriteExisting,ignoreSSLCertificate);
var createStatus = createResult.get("status");
System.log("createRole completed with status: " + createStatus);
if (createStatus != "success") {
    throw "createHznvCInfAdmRole failed with error: " + createResult.get("error");
}

return;]]></script>
</dunes-script-module>