<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="toggleHostConnectionState" result-type="Properties" api-version="6.0.0" id="7c082224-929d-45f0-a486-68ff13e862b9" version="0.0.0" allowed-operations="vfe" category-name="com.vmware.pso.vcenter.powercli.host" memory-limit="512000000" timeout="1800">
  <runtime><![CDATA[powercli:11-powershell-6.2]]></runtime>
  <param n="vcfqdn" t="string"><![CDATA[]]></param>
  <param n="vcuser" t="string"><![CDATA[]]></param>
  <param n="vcpassword" t="SecureString"><![CDATA[]]></param>
  <param n="esxiHostname" t="string"><![CDATA[]]></param>
  <param n="esxiUser" t="string"><![CDATA[Only required to reconnect host]]></param>
  <param n="esxiPassword" t="SecureString"><![CDATA[Only required to reconnect host]]></param>
  <param n="connectHost" t="boolean"><![CDATA[True = Reconnect host to vCenter, False =  Disconnect host from vCenter]]></param>
  <param n="ignoreSSLCertificate" t="boolean"><![CDATA[]]></param>
  <script encoded="false"><![CDATA[function Handler($context, $inputs) {
    $output = @{}
    try{
        $inputsString = $inputs | ConvertTo-Json -Compress
        [ValidateNotNullorEmpty()]
        $vcfqdn = $inputs.vcfqdn
        [ValidateNotNullorEmpty()]
        $vcuser = $inputs.vcuser
        [ValidateNotNullorEmpty()]
        $vcpassword = $inputs.vcpassword
        [ValidateNotNullorEmpty()]
        $esxiHostname = $inputs.esxiHostname
        $esxiUser = $inputs.esxiUser
        $esxiPassword = $inputs.esxiPassword
        [ValidateNotNullorEmpty()]
        $connectHost = $inputs.connectHost
        $ignoreSSLCertificate = $inputs.ignoreSSLCertificate        
    } catch {
        Write-Host "Failed Processing Inputs. Exiting."
        $output.add("status","failed")
        $output.add("error",$_.Exception.Message)
        return $output
    }
    try {
        if($ignoreSSLCertificate) {
            $powerCLIConfig = Set-PowerCLIConfiguration -InvalidCertificateAction Ignore -Confirm:$false
        }
        Write-Host "Connecting to vCenter: $vcfqdn"
        $viConnection = Connect-VIServer $vcfqdn -User $vcuser -Password $vcpassword
    } catch {
        Write-Host "Failed connecting to vCenter: " + $_.Exception
        Write-Host "Exiting."
        $output.add("status","failed")
        $output.add("error",$_.Exception.Message)
        try { Disconnect-VIServer -Server $viConnection -Confirm:$false } catch {}
        return $output        
    } 
    try {
        Write-Host "Finding VM host $esxiHostname"
        $vmHost = Get-VMHost -Name $esxiHostname
        if ($vmHost -eq $null) {
            throw "No VM Host found with name $esxiHostname"
        }

        if ($connectHost) {
            Write-Host "Connecting $esxiHostname to vCenter"
            $connectSpec = New-Object VMware.Vim.HostConnectSpec
            $connectSpec.force = $true
            $connectSpec.hostName = $vmHost.name
            $connectSpec.userName = $esxiUser
            $connectSpec.password = $esxiPassword
            $null = $vmHost.ExtensionData.ReconnectHost_Task($connectSpec,$null)
        } else {
            Write-Host "Disconnecting $esxiHostname from vCenter"
            $null = Set-VMhost -VMhost $vmHost -State Disconnected -Confirm:$false
        }

    } catch {
        Write-Host "Failed toggling Connection state to $connectHost. Exiting." -ForegroundColor red
        $output.add("status","failed")
        $output.add("error",$_.Exception.Message)
        try { Disconnect-VIServer -Server $viConnection -Confirm:$false } catch {}
        return $output        
    }

    try { Disconnect-VIServer -Server $viConnection -Confirm:$false } catch {}

    $output.add("status","success")
    return $output
}
]]></script>
</dunes-script-module>