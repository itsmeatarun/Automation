<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item5" object-name="workflow:name=generic" id="aaec8abc-f478-464f-aabc-adad2c5d1499" version="0.0.2" api-version="6.0.0" allowed-operations="evf" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Compute Removal]]></display-name>
  <description><![CDATA[This workfkow use to clean up  the onboarded openstacks vms with its additional external disks (vms)]]></description>
  <position y="10.0" x="310.0"/>
  <input>
    <param name="inputProperties" type="Properties"/>
  </input>
  <attrib name="vm" type="VC:VirtualMachine" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="isOnboardedVM" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="accessToken" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="machineId" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="customProperties" type="Any" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="osType" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="imageMappings" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[[]]]></value>
  </attrib>
  <attrib name="propertyUpdateResult" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="imageName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="softwareName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="vraBaseUrl" type="string" read-only="false" conf-id="3c2e0092-6448-49f4-8b5f-eaea26743b0c" conf-key="vraBaseUrl">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <in-binding/>
    <position y="505.0" x="50.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item10" type="task">
    <display-name><![CDATA[Prepare for onboard decom]]></display-name>
    <script encoded="false"><![CDATA[var vmName = inputProperties.resourceNames[0];
osType = inputProperties.customProperties.osType;
softwareName = inputProperties.customProperties.softwareName;
machineId = inputProperties.resourceIds[0];

System.log("Requested VM : " + vmName);
System.log("OS Type : " + osType);
var vms = VcPlugin.getAllVirtualMachines(null, "xpath:name[matches(.,'"+vmName.replace("(","\\(").replace(")","\\)")+"')]");

vm = vms[0];
if(vm != null && vm != undefined)
{
    System.log("# of VMs return : " + vms.length );
    var existingNotes = vm.config.annotation.split("\n");
    for(var i in existingNotes)
    {
        if(existingNotes[i].toLowerCase().trim() == "source:vra")
        {
            System.log("This is vRA provisioned VM ");
            isOnboardedVM = false;
        }
        else 
        {
            System.log("This is onboarded VM");
            isOnboardedVM = true;
        }
    }
}
]]></script>
    <in-binding>
      <bind name="inputProperties" type="Properties" export-name="inputProperties"/>
    </in-binding>
    <out-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
      <bind name="isOnboardedVM" type="boolean" export-name="isOnboardedVM"/>
      <bind name="osType" type="string" export-name="osType"/>
      <bind name="softwareName" type="string" export-name="softwareName"/>
      <bind name="machineId" type="string" export-name="machineId"/>
    </out-binding>
    <description><![CDATA[This will determine the requested vm is onboarded or vRA provisioned vM based on the notes field " source:vra"]]></description>
    <position y="130.0" x="270.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="link" linked-workflow-id="91c0d597-1e08-4db3-b267-bb6b94edd4e3">
    <display-name><![CDATA[Onboard VM Decommissioning]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[ ]]></description>
    <position y="460.0" x="10.0"/>
  </workflow-item>
  <workflow-item name="item3" type="end" end-mode="0">
    <in-binding/>
    <position y="450.0" x="180.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item2" type="custom-condition" alt-out-name="item3">
    <display-name><![CDATA[Is This Onboarded VM?]]></display-name>
    <script encoded="false"><![CDATA[return isOnboardedVM;]]></script>
    <in-binding>
      <bind name="isOnboardedVM" type="boolean" export-name="isOnboardedVM"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Custom decision based on a custom script.]]></description>
    <position y="395.0" x="140.0"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item1" type="link" linked-workflow-id="370295ac-0d2b-48a9-a59a-c0083ae693e9">
    <display-name><![CDATA[Get Access Token]]></display-name>
    <in-binding/>
    <out-binding>
      <bind name="accessToken" type="string" export-name="accessToken"/>
    </out-binding>
    <description><![CDATA[ ]]></description>
    <position y="75.0" x="270.0"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item4" type="task" script-module="com.vmware.pso.wellsfargo/addOrUpdateMachineProperties">
    <display-name><![CDATA[addOrUpdateMachineProperties]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.pso.wellsfargo").addOrUpdateMachineProperties(machineId,customProperties,access_token,vraBaseUrl);
]]></script>
    <in-binding>
      <bind name="machineId" type="string" export-name="machineId"/>
      <bind name="customProperties" type="Any" export-name="customProperties"/>
      <bind name="access_token" type="string" export-name="accessToken"/>
      <bind name="vraBaseUrl" type="string" export-name="vraBaseUrl"/>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="string" export-name="propertyUpdateResult"/>
    </out-binding>
    <description><![CDATA[Add a note to the workflow schema.]]></description>
    <position y="350.0" x="140.0"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item8" type="task" script-module="com.vmware.pso.wellsfargo/getImageMappings">
    <display-name><![CDATA[getImageMappings]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.pso.wellsfargo").getImageMappings(osType);
]]></script>
    <in-binding>
      <bind name="osType" type="string" export-name="osType"/>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Array/string" export-name="imageMappings"/>
    </out-binding>
    <description><![CDATA[Add a note to the workflow schema.]]></description>
    <position y="240.0" x="140.0"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item6" type="task">
    <display-name><![CDATA[Build properties content]]></display-name>
    <script encoded="false"><![CDATA[var softwareVersion = softwareName.split(" ")[softwareName.split(" ").length - 2];
for (var i=0; i<imageMappings.length; i++)
{
    var imageVersion = imageMappings[i].split("-")[2]
    if(osType.toUpperCase() == "WINDOWS")
    {
        if(imageVersion.indexOf(softwareVersion) > -1)
        {
            if(imageVersion.length == softwareVersion.length)
            {
                imageName = imageMappings[i];
            }
            else if(imageVersion.toUpperCase() == (softwareVersion + "R2").toUpperCase())
            {
                imageName = imageMappings[i];

            }
             
        }
    }
    else if(imageVersion == softwareVersion)
    {
        if(imageMappings[i].split("-").length == 3)
            imageName = imageMappings[i];
    }
}

customProperties = {
    "customProperties":
    {
        "isOnboardedVM" : isOnboardedVM,
        "image": imageName
    }
}

System.debug(JSON.stringify(customProperties));
]]></script>
    <in-binding>
      <bind name="imageMappings" type="Array/string" export-name="imageMappings"/>
      <bind name="imageName" type="string" export-name="imageName"/>
      <bind name="softwareName" type="string" export-name="softwareName"/>
      <bind name="osType" type="string" export-name="osType"/>
      <bind name="isOnboardedVM" type="boolean" export-name="isOnboardedVM"/>
    </in-binding>
    <out-binding>
      <bind name="customProperties" type="Any" export-name="customProperties"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="295.0" x="140.0"/>
  </workflow-item>
  <workflow-item name="item9" type="end" end-mode="0">
    <in-binding/>
    <position y="230.0" x="310.0"/>
  </workflow-item>
  <workflow-item name="item10" out-name="item7" type="condition" alt-out-name="item9" comparator="0">
    <display-name><![CDATA[Decision]]></display-name>
    <script encoded="false"><![CDATA[// Generated by the system, cannot be edited
return (vm !== null);]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding/>
    <condition name="vm" type="VC:VirtualMachine" comparator="0" label="null"/>
    <description><![CDATA[Custom decision based on a custom script.]]></description>
    <position y="175.0" x="270.0"/>
  </workflow-item>
  <presentation/>
</workflow>