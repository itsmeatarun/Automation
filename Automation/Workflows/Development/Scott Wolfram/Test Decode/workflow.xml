<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item2" object-name="workflow:name=generic" id="55381c90-33d5-4512-8249-6c3d02be905e" editor-version="2.0" version="0.0.0" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Test Decode</display-name>
    <position y="50.0" x="100.0"/>
    <input/>
    <output/>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="42.11145618000168" x="386.7739820199815"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item0" type="task" comparator="0">
        <display-name>Scriptable task</display-name>
        <script encoded="false">var certificateChain = ""&#13;
&#13;
&#13;
System.log("certificateChain")&#13;
System.log(certificateChain)&#13;
System.log("certificateChain")&#13;
&#13;
&#13;
//Auto generated script, cannot be modified !&#13;
var actionResult = System.getModule("com.vmware.pso.venafi.util").decodeCertificateChain(certificateChain, "VMware12345!2");&#13;
&#13;
&#13;
System.log("!!!!!!!!!!!!!!" + (JSON.stringify(actionResult)));&#13;
</script>
        <in-binding/>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="40.0" x="160.0"/>
    </workflow-item>
    <presentation/>
</ns2:workflow>
